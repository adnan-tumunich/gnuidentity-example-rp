Step 0: Make a control flow diagram from the client's perspective
urn:gns:credential:1.0
Step 1:
#create identity X (Issuer)_
gnunet-identity -C X

X.a1 <- User (e.g. Adnan)

CRED=gnunet-credential --issue --ego=X --subject User(Pubkey) --attribute=a1 --ttl=1y

gnunet-credential --issue --ego=testissuer --subject 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG --attribute=student --ttl=1d

#Sample credential
#KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG.student -> 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG | AyoKojAYKLMJNF1VldHY5g0zikT9g1J7B6Iq8m/e7p8JF9PpB3hB0B5sqc/UGOHgQxGTCxAQyK/EF4PREYbpww=== | 1495885180692747

Valid till 2028:
KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG.student -> 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG | DaYiy1sbc+q0DmlrlElqlxC1hzQV+Cp4y9X4i+HCESYIdg68r6QaZtj+VUvfl9obieynRH3AT38KAZHZsgoDAQ=== | 18384608390509551616



#User stores this credential
gnunet-namestore -z User -a -n "credFromX" -t CRED -V "$CRED"

gnunet-namestore -z Adnan -a -n "mystudentcredential" -t CRED -V "KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG.student -> 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG | AyoKojAYKLMJNF1VldHY5g0zikT9g1J7B6Iq8m/e7p8JF9PpB3hB0B5sqc/UGOHgQxGTCxAQyK/EF4PREYbpww=== | 1495885180692747" -e 1d

gnunet-namestore -z Adnan -a -n "mystudentcredential" -t CRED -V "KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG.student -> 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG | DaYiy1sbc+q0DmlrlElqlxC1hzQV+Cp4y9X4i+HCESYIdg68r6QaZtj+VUvfl9obieynRH3AT38KAZHZsgoDAQ=== | 18384608390509551616" -e 1y




Step 2:

Get policy with timeout (via commandline) -  if it times out then not found - timeout 30s 
gnunet-gns -u "<resource_id>_<action>" -t POLICY -z ROPUBKEY

Policy:

X.a1

Step 3:
example-rp.a2 <- X.a1


#a2 is an arbitrary attribute 
gnunet-namestore -p -z example-rp -a -n a2 -t ATTR -V "X_publickey a1" -e 5m 

gnunet-namestore -p -z master-zone -a -n user -t ATTR -V "KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG student" -e 1y

Result:
user:
May 24 10:13:40-228019 gnunet-namestore-3757 ERROR 8 len attr
	ATTR: KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG student (5 m)	





Step 4: 
req_ver_attrs -> a2 

# login flow starts here
# user gives back a JWT containing a1

Step 5: Back to example RP 
Post to the verify endpoint in format specified in 
test_credential_verify_rest.sh

If you get a 200 then its okay and verified

give one attribute and all credentials and then second attribute and all credentials 

Step 6: Grant access to the requested resource



TESTING: (curl and firefox)

curl -i http://192.168.33.10:4567/rpt_claims?ticket=7d282e1b-28b3-4ecf-979f-2969078daf57 -H "Authorization: Bearer valid_aat_1"

gnuidentity://?redirect_uri=http%3A%2F%2Ftestservice.gnu%3A4567%2Fclaims_gathering_cb%3Fpermission_ticket%3D7d282e1b-28b3-4ecf-979f-2969078daf57&client_id=YFJMNXKCQX99KECSE5MNQ3P1PTJMGBRNSBDCPFXZA3MM0HKNHNFG&issue_type=ticket&requested_attrs=user&nonce=1234

http://testservice.gnu:4567/claims_gathering_cb?permission_ticket=7d282e1b-28b3-4ecf-979f-2969078daf57?ticket=eyJkYXRhIjogInp5QW1qRjhiQi9VeW4wekFCZGxYdkxVR3hpTzlGWldHNDNlOCtQdnpvWC84Q1gzOE54clZrRlA4M29qU2dQK1JNNFBoSnBPK2k5UE51S2UzcEJsOEhGNHZHbUtQU0tvbzNMNUpVUUw5ek90NWFUbDFsQzFSdjFkWEZRb2hRckxxUXo2dlkzVWxMSEFyTzJIS2tnPT09IiwgImVjZGgiOiAiMDk3Szg1UUQ0QThWWkMyQktUU0ZOQ1FLSlFNS1FaSzJYNTBGWlJRMlEyUURUS0I2UEdTMCIsICJzaWduYXR1cmUiOiAiMDJTVzdaUlhNRkNKV1NQUTMyQTVSQVMxSzcyMVdEUzkwNTlZNk1KUjcxRlZBU1g0UVRXR1NRTkhGSjdTSDhZRkM3Q1FZNFRRWDBSR1pYUkJKWkVQNTBXQ1E0WUVHN0E2N0Y0VkM0OCJ9=

http://192.168.33.10:7776/idp/issue?issuer=Adnan&audience=87DYZCD8DV2ENR8RC2S425FZPB93CV56XHG4DAQVVZ93RCWES6M0&requested_attrs=phone&expiration=1d&nonce=1234&requested_verified_attrs=user


testservice.gnu:4567/claims_gathering_cb?permission_ticket=7d282e1b-28b3-4ecf-979f-2969078daf57&ticket=eyJkYXRhIjogImFhOW1vaDZabGUvTy9qbSttTXYwaUtyU3pQTnMvaXpoWEZRMXgweDczN0RxSXhSZDBFZW1oVXh6UWxPckZ0di9TYmpCWmQ0ZWFML3NQYVBUb0JiMDhDRFp2eGhCazh6aWJFUHl3ZE5VTWxPY05mazlzbUtTUS8wRlhpMWE3bWx3a0xhS2JDRklMTk9tTEEvTTVnPT09IiwgImVjZGgiOiAiRkRWREFSUTNNRFhUWlBZWFdHVFI5UFY3QVhOVDhIQVE0OFpCSzJNRk5HU1BLVDNRMlI1MCIsICJzaWduYXR1cmUiOiAiMEJYUlpNMzhKUjM2UFFRQTcyNUhUN1YzRVYxMkZHVFo2R1kzQVNDRTVOS1IyUERKVkI5R1ZQUkFGMlExQzJXVkREUEZEMjZBSEdDSkpCUTA4Q0RBS1JOVDdHN0hQUDBRWEQ5QTdTRyJ9=

JWT

ewogImFsZyI6ICJFRDUxMiIsCiAidHlwIjogImp3dCIKfQ.ewogImlzcyI6ICIwN1RBWFFRM1ZXNzFGMzNKQThaRVozN0VXM0taOTRQWU5KTkNOUzlYNzIwS1JDV01TQ1NHIiwKICJhdWQiOiAiWUZKTU5YS0NRWDk5S0VDU0U1TU5RM1AxUFRKTUdCUk5TQkRDUEZYWkEzTU0wSEtOSE5GRyIsCiAic3ViIjogIjA3VEFYUVEzVlc3MUYzM0pBOFpFWjM3RVczS1o5NFBZTkpOQ05TOVg3MjBLUkNXTVNDU0ciLAogIm5iZiI6IDE0OTYxMzQ5NzgyODgxNzgsCiAiaWF0IjogMTQ5NjEzNDk3ODI4ODE3OCwKICJleHAiOiAxNDk2MTM2Nzc4Mjg4MTc4LAogIm5vbmNlIjogIjEyMzQiLAogInVzZXIiOiB7CiAgImlzc3VlciI6ICJLTktTU0pXNVg5RVJaOUFKODhEMjAyV1BGRUdDWkZKMlg4RTVSOTBDOEROWERRWFBROFlHIiwKICAic3ViamVjdCI6ICIwN1RBWFFRM1ZXNzFGMzNKQThaRVozN0VXM0taOTRQWU5KTkNOUzlYNzIwS1JDV01TQ1NHIiwKICAic2lnbmF0dXJlIjogIkF5b0tvakFZS0xNSk5GMVZsZEhZNWcwemlrVDlnMUo3QjZJcThtL2U3cDhKRjlQcEIzaEIwQjVzcWMvVUdPSGdReEdUQ3hBUXlLL0VGNFBSRVlicHd3PT09IiwKICAiYXR0cmlidXRlIjogInN0dWRlbnQiLAogICJleHBpcmF0aW9uIjogMTQ5NTg4NTE4MDY5Mjc0NwogfQp9.ASlp/7/RFGvSRQbA/6OSGWGWD944gUWnwHS8oFNont8PcD/y7h5MzxVctOpxPowYSMiZFEyGi1qr6WA96NJXYQ===

{
  "iss": "07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG",
  "aud": "YFJMNXKCQX99KECSE5MNQ3P1PTJMGBRNSBDCPFXZA3MM0HKNHNFG",
  "sub": "07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG",
  "nbf": 1496134978288178,
  "iat": 1496134978288178,
  "exp": 1496136778288178,
  "nonce": "1234",
  "user": {
    "issuer": "KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG",
    "subject": "07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG",
    "signature": "AyoKojAYKLMJNF1VldHY5g0zikT9g1J7B6Iq8m/e7p8JF9PpB3hB0B5sqc/UGOHgQxGTCxAQyK/EF4PREYbpww===",
    "attribute": "student",
    "expiration": 1495885180692747
  }
}



master-zone - YFJMNXKCQX99KECSE5MNQ3P1PTJMGBRNSBDCPFXZA3MM0HKNHNFG
testissuer - KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG
Adnan - 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG


#### Wrong attribute verification
//////gnunet-credential --verify --issuer=YFJMNXKCQX99KECSE5MNQ3P1PTJMGBRNSBDCPFXZA3MM0HKNHNFG --attribute=student --subject=07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG --credential=KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG.student -> 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG | AyoKojAYKLMJNF1VldHY5g0zikT9g1J7B6Iq8m/e7p8JF9PpB3hB0B5sqc/UGOHgQxGTCxAQyK/EF4PREYbpww=== | 1495885180692747///////////////////


###Attribute should be user
gnunet-credential --verify --issuer=YFJMNXKCQX99KECSE5MNQ3P1PTJMGBRNSBDCPFXZA3MM0HKNHNFG --attribute=user --subject=07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG --credential="KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG.student -> 07TAXQQ3VW71F33JA8ZEZ37EW3KZ94PYNJNCNS9X720KRCWMSCSG | DaYiy1sbc+q0DmlrlElqlxC1hzQV+Cp4y9X4i+HCESYIdg68r6QaZtj+VUvfl9obieynRH3AT38KAZHZsgoDAQ=== | 18384608390509551616"


CREDS in REST request and Bash request:

1. REST

{
  "data": [
    {
      "type": "credential",
      "id": "JYWEV4766JGPD5VRSGSZEVDF6B395W2JKTB7XVCAKSMF6Z5795C0.user",
      "attributes": {
        "credential": [
          {
            "issuer": "8Y1130YS90H3239WDNZ5N59JX9KF1PWK6AR9SKKFDPAX0WJRH7R0",
            "signature": "CG58YDaSUvQZoLsRV92nIIRTMTjWO8LETscNpxHe9AIF6DR7PAupwc4ASdzOMXfKZ1aHBG+oWp0n+/SQFFQW3w===",
            "subject": "4D2G9QPEAP8KJQ0QQZZVEA4WE0BT7E7S3D0H6XBDR40KKTWMEBQ0",
            "attribute": "developer",
            "expiration": 1496393354813968
          }
        ],
        "delegations": [
          {
            "issuer": "JYWEV4766JGPD5VRSGSZEVDF6B395W2JKTB7XVCAKSMF6Z5795C0",
            "subject": "52VHM8VH7VXHMHB8ME302M9FCDC5CDYB88DHNDFZJHDS9RCV75C0",
            "issuer_attribute": "user",
            "subject_attribute": "project.member"
          },
          {
            "issuer": "52VHM8VH7VXHMHB8ME302M9FCDC5CDYB88DHNDFZJHDS9RCV75C0",
            "subject": "8Y1130YS90H3239WDNZ5N59JX9KF1PWK6AR9SKKFDPAX0WJRH7R0",
            "issuer_attribute": "project"
          },
          {
            "issuer": "8Y1130YS90H3239WDNZ5N59JX9KF1PWK6AR9SKKFDPAX0WJRH7R0",
            "subject": "8Y1130YS90H3239WDNZ5N59JX9KF1PWK6AR9SKKFDPAX0WJRH7R0",
            "issuer_attribute": "member",
            "subject_attribute": "developer"
          }
        ]
      }
    }
  ]
}

2. Bash: 

V73H342NV7KHWZ1V53BSNK5D2JAE96YY1Z7RYC8ME57V6TTY9AB0.developer -> 0GDNM4M64GX9Z9YZ16XTQA106Q6J6W3JBYPJX180VCSHR47J1XW0 | DxzAMyx5pi1esj6uSH88NNWjwiE7m6OqV5n0Vr7Pp1YDLDrx+DxA3Pyx41vHs5yLDtrw3o9iMMfna2KFliI5Pg=== | 1496394582843908


Issue a POLICY to alice (say alice is the resource owner )

alice public key: MFVZ0430P5CRHSYY8K23X45J06YYTXSJFG7PCTR608WZMJMBVBWG
testissuer public key: KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG
resource_id: 18687878
action: read

gnunet-namestore -z alice -a -n "18687878_read" -t POLICY -V "{'array':['KNKSSJW5X9ERZ9AJ88D202WPFEGCZFJ2X8E5R90C8DNXDQXPQ8YG.student']}" -e 1w



TODO: 

model resource owner public key inside UMA scope
can a policy be defined like {'read': [Issuer.attribute], 'write': [Issuer.attribute1]}